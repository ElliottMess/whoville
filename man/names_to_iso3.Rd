% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/names.R
\name{names_to_iso3}
\alias{names_to_iso3}
\title{Get ISO3  codes from names}
\usage{
names_to_iso3(
  names,
  language = "en",
  ignore_case = T,
  fuzzy_matching = "yes",
  method = "jw",
  p = 0.1
)
}
\arguments{
\item{names}{A character vector of country names.}

\item{language}{A character value specifying the language of the country names.
Should be specified using the ISO2 language code. Defaults to "en", but matching
available for all 6 official WHO languages. Possible values are "en", "es",
"ar", "fr", "ru", and "zh".}

\item{ignore_case}{A logical value specifying whether or not to ignore case when
string matching. Defaults to TRUE.}

\item{fuzzy_matching}{A character value specifying whether or not to do fuzzy matching,
or to require user input when no exact match is found. Defaults to "yes".}

\item{method}{A character value specifying the distance method for use in fuzzy matching
if an exact match is not found. Defaults to Jaro-Winker due to its value
in matching names. See \code{\link[stringdist:stringdist]{stringdist::stringdist()}} for all possible methods.}

\item{p}{A numeric value between 0 and 0.25 specifying the penalty factor
for Jaro-Winkler distance. Ignored if method is not "jw".}
}
\value{
A vector of country codes matched to the names.
}
\description{
\code{names_to_iso3()} takes in a vector of country names and returns a vector of
ISO3 codes.
}
\details{
The function first searches for exact matches in the \code{countries}
data frame, and if none are found, uses fuzzy matching to guess the country.
Matching is done using \code{stringdist} \link[stringdist:stringdist-metrics]{fuzzy matching methods},
although \code{names_to_codes()} allows the user to not do any fuzzy matching (non-exact
matches returned as \code{NA}) or require user input.
}
